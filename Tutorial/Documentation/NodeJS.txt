
NODEJS

NodeJS allows you to run JavaScript outside the browser, in this case, on the web server.
Node Package Manager (NPM) allows you to install/publish node packages with ease.

# To install NodeJS
sudo apt-get install curl
sudo apt-get install python-software-properties
curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -
sudo apt-get install -y nodejs

# To know the version
node -v # v7.9.0
npm -v # 4.2.0

=======================================================================================================================

EXPRESSJS

ExpressJS is a complete web framework solution that runs on NodeJS.
Install the package "express" as a dependency, inside your project folder.

npm install express --save

=======================================================================================================================

NODEMON

Everytime you change a file you have to stop and start the web server.
Let's fix that using "nodemon" to refresh automatically.

# install nodemon globally
sudo npm install nodemon -g

# Run web server with nodemon
PORT=4000 nodemon # or just nodemon to use the default 3000 port.

=======================================================================================================================

MONGOOSE

Connect NodeJS to MongoDB with Mongoose. Mongoose is an NPM package that allows you to interact with MongoDB.

# The MongoDB must be running
mongod

# Install the MongoDB driver for NodeJS, inside your project folder.
npm install mongoose --save

# app.js
var mongoose = require('mongoose');

// use native Node promises to connect to MongoDB (Mongoose)
mongoose.Promise = global.Promise;
mongoose.connect('mongodb://localhost/test-api')
    .then(function () {
        console.log('[mongoose] connection succesful')
    }, null)
    .catch(function (err) {
        console.error('[mongoose] ' + err)
    });

=======================================================================================================================